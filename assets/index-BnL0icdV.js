import{r as v,a as m,w as _}from"./dynamic-table-CtWW4hiU.js";import{d as F}from"./dateUtil-ohqk8BGA.js";import{d as C,r as g,B as w,I as E,Q as I,V as b,W as $,R as N,L as j}from"./vendor-D7Y6X7_h.js";import{_ as B}from"./index-Bf9NpXkZ.js";import{w as U}from"./index-DKcumURF.js";import"./index.vue_vue_type_style_index_0_lang-reX62h1K.js";import"./ApiSelect.vue_vue_type_script_setup_true_lang-BrXY2i5o.js";const T=C({name:"ImportExcel",props:{dateFormat:{type:String},timeZone:{type:Number,default:8}},emits:["success","error"],setup(r,{emit:o}){const s=g(null),u=g(!1);function p(e){if(!e||!e["!ref"])return[];const t=[],n=m.decode_range(e["!ref"]),h=n.s.r;for(let a=n.s.c;a<=n.e.c;++a){const i=e[m.encode_cell({c:a,r:h})];let d=`UNKNOWN ${a}`;i&&i.t&&(d=m.format_cell(i)),t.push(d)}return t}function c(e){const t=[],{dateFormat:n,timeZone:h}=r;for(const a of e.SheetNames){const i=e.Sheets[a],d=p(i);let k=m.sheet_to_json(i,{raw:!0,dateNF:n});k=k.map(f=>{for(const y in f)f[y]instanceof Date&&(h===8&&f[y].setSeconds(f[y].getSeconds()+43),n&&(f[y]=F(f[y]).format(n)));return f}),t.push({header:d,results:k,meta:{sheetName:a}})}return t}function l(e){u.value=!0;const{promise:t,resolve:n,reject:h}=Promise.withResolvers(),a=new FileReader;return a.onload=async i=>{try{const d=i.target&&i.target.result,k=v(d,{type:"array",cellDates:!0}),f=c(k);o("success",f),n("")}catch(d){h(d),o("error")}finally{u.value=!1}},a.readAsArrayBuffer(e),t}async function x(e){const t=w(s);t&&(t.value=""),await l(e)}function S(e){const t=e&&e.target.files,n=t&&t[0];n&&x(n)}function D(){const e=w(s);e&&e.click()}return{handleUpload:D,handleInputClick:S,inputRef:s}}});function A(r,o,s,u,p,c){return E(),I("div",null,[b(N("input",{ref:"inputRef",type:"file",accept:".xlsx, .xls",onChange:o[0]||(o[0]=(...l)=>r.handleInputClick&&r.handleInputClick(...l))},null,544),[[$,!1]]),N("div",{onClick:o[1]||(o[1]=(...l)=>r.handleUpload&&r.handleUpload(...l))},[j(r.$slots,"default")])])}const H=B(T,[["render",A]]),R="excel-list.xlsx";function O({data:r,header:o,filename:s=R,json2sheetOpts:u={},write2excelOpts:p={bookType:"xlsx"}}){let c=[...r];if(o){c.unshift(o);const S=Object.keys(o);c=c.map(D=>S.reduce((e,t)=>(e[t]=D[t],e),{})),u.skipHeader=!0}const l=m.json_to_sheet(c,u),x={SheetNames:[s],Sheets:{[s]:l}};_(x,s,p)}function P({data:r,header:o,filename:s=R,write2excelOpts:u={bookType:"xlsx"}}){const p=[...r];o&&p.unshift(o);const c=m.aoa_to_sheet(p),l={SheetNames:[s],Sheets:{[s]:c}};_(l,s,u)}U(H);export{P as a,O as j};
